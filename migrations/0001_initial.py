# Generated by Django 4.1.7 on 2023-07-14 10:48

from django.db import migrations, models
import django.db.models.deletion
import snippets.utils.passwords


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0002_initial'),
        ('handbooks', '0002_initial'),
        ('coupons', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('order_number', models.CharField(max_length=12, unique=True, verbose_name='Номер заказа')),
                ('alt_id', models.CharField(default=snippets.utils.passwords.generate_alt_id, max_length=30, unique=True, verbose_name='Alt ID')),
                ('first_name', models.CharField(max_length=255, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('phone', models.CharField(max_length=30, verbose_name='Телефон')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('comment', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Комментарий')),
                ('locality', models.CharField(blank=True, max_length=255, null=True, verbose_name='Населенный пункт')),
                ('postcode', models.CharField(blank=True, max_length=6, null=True, verbose_name='Почтовый индекс')),
                ('street', models.CharField(blank=True, max_length=150, null=True, verbose_name='Улица')),
                ('building', models.CharField(blank=True, max_length=20, null=True, verbose_name='Дом')),
                ('housing', models.CharField(blank=True, max_length=20, null=True, verbose_name='Корпус')),
                ('apartment', models.CharField(blank=True, max_length=20, null=True, verbose_name='Квартира')),
                ('is_fast_order', models.BooleanField(default=False, verbose_name='Быстрый заказ')),
                ('coupon_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True, verbose_name='Скидка по промокоду')),
                ('retailcrm_id', models.IntegerField(blank=True, null=True, verbose_name='ID в RetailCRM')),
                ('congratulation', models.TextField(blank=True, null=True, verbose_name='Поздравление')),
                ('items_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=11, verbose_name='Стоимость товара')),
                ('delivery_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True, verbose_name='Стоимость доставки')),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True, verbose_name='Скидки')),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=11, verbose_name='Общая стоимость')),
                ('payment_status', models.SmallIntegerField(choices=[(-1, 'Не оплачено'), (1, 'Оплачено')], default=-1, verbose_name='Статус оплаты')),
                ('payment_gateway_order_id', models.CharField(blank=True, max_length=64, null=True, verbose_name='Идентификатор оплаты шлюза')),
                ('income', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True, verbose_name='Полученная сумма')),
                ('payment_error_code', models.CharField(blank=True, max_length=20, null=True, verbose_name='Код ошибки оплаты')),
                ('payment_error_message', models.TextField(blank=True, null=True, verbose_name='Текст ошибки оплаты')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='coupons.coupon', verbose_name='Промокод')),
                ('coupon_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_duplicate', to='coupons.couponentry', verbose_name='Использование промокода')),
                ('delivery_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='handbooks.deliverytype', verbose_name='Тип доставки')),
                ('payment_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='handbooks.paymenttype', verbose_name='Тип оплаты')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='handbooks.region', verbose_name='Регион')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='handbooks.orderstatus', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Заказ',
                'verbose_name_plural': 'Заказы',
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='OrderStatusLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('comment', models.TextField(blank=True, max_length=4096, null=True, verbose_name='Комментарий')),
                ('send_email', models.BooleanField(default=True, verbose_name='Отправить email')),
                ('is_email_sent', models.BooleanField(default=False, verbose_name='Отправлен email')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='orders.order', verbose_name='Заказ')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_statuses', to='handbooks.orderstatus', verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Статус заказа',
                'verbose_name_plural': 'Статусы заказа',
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Создано')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Обновлено')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=11, verbose_name='Цена за единицу')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order', verbose_name='Заказ')),
                ('package_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='handbooks.packagetype', verbose_name='Тип упаковки')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='order_items', to='catalog.product', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Позиция в заказе',
                'verbose_name_plural': 'Позиции заказа',
                'ordering': ('created',),
            },
        ),
    ]
